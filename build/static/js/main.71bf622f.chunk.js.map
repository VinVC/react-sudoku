{"version":3,"sources":["utils/sudoku.js","redux/store/index.js","redux/actions/index.js","components/Cell.jsx","containers/CellContainer.jsx","containers/GridContainer.jsx","components/Grid.jsx","App.js","serviceWorker.js","index.js"],"names":["validNums","Array","fill","map","e","i","createNewSudoku","sudokuArr","dfs","row","col","j","nums","slice","sort","Math","random","index","isValid","num","floor","generate36Cells","partialSudoku","JSON","parse","stringify","centerNums","options","set","Set","size","a","b","add","val","rowOption","parseInt","substring","colOption","verifySudoku","alert","isVerify","initialState","completeInput","showingAnswer","input","highLight","store","createStore","ReduxUndo","state","action","type","payload","newValue","nextInput","limit","window","__REDUX_DEVTOOLS_EXTENSION__","Cell","props","handleChange","bind","value","target","includes","this","setVal","Number","className","highlighted","onChange","disabled","PureComponent","connect","ownProps","dispatch","present","item","key","CellContainer","App","GridContainer","onClick","ActionCreators","undo","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.71bf622f.chunk.js","sourcesContent":["// 生成一个数独\r\n\r\n// 每个cell的可取值\r\nconst validNums = new Array(9).fill(0).map((e,i) => i+1)\r\n\r\nexport function createNewSudoku() {\r\n  const sudokuArr = [\r\n    new Array(9).fill(''),new Array(9).fill(''),new Array(9).fill(''),\r\n    new Array(9).fill(''),new Array(9).fill(''),new Array(9).fill(''),\r\n    new Array(9).fill(''),new Array(9).fill(''),new Array(9).fill('')\r\n  ]\r\n  dfs(sudokuArr, 0, 0)\r\n  return sudokuArr\r\n}\r\n\r\n//深度优先搜索可取值\r\nfunction dfs(sudokuArr, row, col) {\r\n  if(col === 9) return dfs(sudokuArr, row+1, 0)\r\n  if(row === 9) return true\r\n  for (let i = row; i< 9; i++) {\r\n    for (let j = col; j< 9; j++) {\r\n      let nums = validNums.slice().sort(() => Math.random() - 0.5)\r\n      for(let index=0; index<9; index++) {\r\n        if(!isValid(sudokuArr, i, j, nums[index])) continue\r\n        sudokuArr[i][j] = nums[index]\r\n        if(dfs(sudokuArr, i, j+1)) return true\r\n        sudokuArr[i][j] = ''\r\n      }\r\n      return false\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nfunction isValid(sudokuArr, row, col, num) {\r\n  for(let i=0; i<9; i++) {\r\n    if(sudokuArr[row][i] === num) return false\r\n    if(sudokuArr[i][col] === num) return false\r\n    if(sudokuArr[Math.floor(row/3)*3 + Math.floor(i / 3)][Math.floor(col/3)*3 + i%3] === num) return false\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * 产生一个只有36个cell的布局\r\n */\r\nexport function generate36Cells(sudokuArr) {\r\n  const partialSudoku = JSON.parse(JSON.stringify(sudokuArr))\r\n  const centerNums = [[1,1],[1,4],[1,7],[4,1],[4,4],[4,7],[7,1],[7,4],[7,7]]\r\n  for(let i=0; i<9; i++) {\r\n    let row = centerNums[i][0],col = centerNums[i][1]\r\n    let options = ['-1', '00', '01']\r\n    let set = new Set()\r\n    while (set.size < 5) {\r\n      let a = options[Math.floor(Math.random()*3)]\r\n      let b = options[Math.floor(Math.random()*3)]\r\n      set.add(a+b)\r\n    }\r\n    for(let val of set) {\r\n      let rowOption = parseInt(val.substring(0,2))\r\n      let colOption = parseInt(val.substring(2))\r\n      partialSudoku[row+rowOption][col+colOption] = ''\r\n    }\r\n  }\r\n\r\n  return partialSudoku\r\n\r\n}\r\n\r\n//判断当前的输入是否合规\r\nexport function verifySudoku(sudokuArr) {\r\n  for(let i=0; i<9; i++) {\r\n    for(let j=0; j<9; j++) {\r\n      if(sudokuArr[i][j] == 0) {\r\n        alert(`第${i+1}行，第${j+1}列未输入`) \r\n        return\r\n      }\r\n      if(!isVerify(sudokuArr, i, j, sudokuArr[i][j])) {\r\n        alert(`第${i+1}行，第${j+1}列和其他有重复`) \r\n        return\r\n      }\r\n    }\r\n  }\r\n  alert('恭喜你，已完成')\r\n  return\r\n}\r\n\r\n//判断当前坐标的值是否合规\r\nfunction isVerify(sudokuArr, row, col, num) {\r\n  for(let i=0; i<9; i++) {\r\n    if(sudokuArr[row][i] === num) {\r\n      if(i !== col) {\r\n        return false\r\n      }\r\n    }\r\n    if(sudokuArr[i][col] === num) {\r\n      if(i !== row) {\r\n        return false\r\n      }\r\n    }\r\n    if(sudokuArr[Math.floor(row/3)*3 + Math.floor(i / 3)][Math.floor(col/3)*3 + i%3] === num) {\r\n      if((Math.floor(row/3)*3 + Math.floor(i / 3)) !== row && (Math.floor(col/3)*3 + i%3) !==col) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}","import { createStore } from \"redux\"\r\nimport { createNewSudoku, generate36Cells,verifySudoku } from '../../utils/sudoku'\r\nimport { CREATE_NEW,SHOW_ANSWER,SET_VAL,VERIFY } from '../actions'\r\nimport ReduxUndo from 'redux-undo'\r\n\r\nconst initialState = {\r\n  completeInput: createNewSudoku(),\r\n  showingAnswer: false\r\n}\r\ninitialState.input = generate36Cells(initialState.completeInput)\r\ninitialState.highLight = JSON.parse(JSON.stringify(initialState.input))\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_NEW:\r\n      let completeInput = createNewSudoku()\r\n      let input = generate36Cells(completeInput)\r\n      return {...state, completeInput, input, highLight:JSON.parse(JSON.stringify(input)),showingAnswer: false }\r\n    case SHOW_ANSWER: \r\n      if(state.showingAnswer) return state\r\n      return {...state, input: state.completeInput, showingAnswer: true}\r\n    case SET_VAL: \r\n      const {row, col} = action.payload\r\n      const newValue = action.payload.val ? action.payload.val : ''\r\n      let nextInput = JSON.parse(JSON.stringify(state.input))\r\n      nextInput[row][col] = newValue\r\n      return {...state, input:nextInput}\r\n    case VERIFY: \r\n      verifySudoku(state.input)\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst store = createStore(ReduxUndo(reducer,{limit:20}), initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store","export const CREATE_NEW = 'CREATE_NEW'\r\nexport const SHOW_ANSWER = 'SHOW_ANSWER'\r\nexport const SET_VAL = 'SET_VAL'\r\nexport const VERIFY = 'VERIFY'\r\n\r\nexport function createNew() {\r\n  return {\r\n    type: CREATE_NEW\r\n  }\r\n}\r\n\r\nexport function showAnswer() {\r\n  return {\r\n    type: SHOW_ANSWER\r\n  }\r\n}\r\n\r\nexport function setVal(row, col, val) {\r\n  return {\r\n    type: SET_VAL,\r\n    payload: {\r\n      row,\r\n      col,\r\n      val\r\n    }\r\n  }\r\n}\r\n\r\nexport function verify() {\r\n  return {\r\n    type: VERIFY\r\n  }\r\n}","import React, { PureComponent } from 'react'\r\nimport './cell.css'\r\nexport default class Cell extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  handleChange(e){\r\n    const { value } = e.target\r\n    if(!['','1','2','3','4','5','6','7','8','9'].includes(value)) {\r\n      alert('请输入1-9的数字')\r\n      return\r\n\r\n    }\r\n    this.props.setVal(Number(value))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input \r\n        className={ this.props.highlighted ?'hasInitialVal cell':'cell'} \r\n        onChange={this.handleChange} value={this.props.val} \r\n        disabled={this.props.highlighted} \r\n      />\r\n    )\r\n  }\r\n}","\r\nimport Cell from '../components/Cell'\r\nimport { connect } from 'react-redux'\r\nimport { setVal } from '../redux/actions'\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let highlighted = false\r\n  if (state['present']['highLight'][ownProps.row][ownProps.col]) {\r\n      highlighted = true\r\n  }\r\n   return {\r\n      highlighted\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch,ownProps) => {\r\n  return {\r\n    setVal: (val) => dispatch(setVal(ownProps.row, ownProps.col, val))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cell)\r\n","\r\nimport { connect } from 'react-redux'\r\nimport Grid from '../components/Grid'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    input: state.present.input\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Grid)","import React from 'react'\r\nimport CellContainer from '../containers/CellContainer'\r\nimport './grid.css'\r\n\r\nexport default function Grid(props) {\r\n  return (\r\n    <div className=\"grid\">\r\n      {\r\n        props.input.map((item,row )=> \r\n          <div key={row} className=\"row\">\r\n            { item.map((i,col) => <CellContainer key={col} val={i} row={row} col={col}/>) }\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react' \r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport { createNew,showAnswer,verify } from './redux/actions'\r\nimport { ActionCreators } from 'redux-undo'\r\nimport './App.css'\r\nimport GridContainer from './containers/GridContainer'\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <GridContainer/>\r\n        <footer>\r\n          <button className=\"mlr-10 ponter\" onClick={() => store.dispatch(createNew())}>重新生成</button>\r\n          <button className=\"mlr-10 ponter\" onClick={() => store.dispatch(verify())}>验证</button>\r\n          <button className=\"mlr-10 ponter\" onClick={() => store.dispatch(showAnswer())} >显示正确结果</button>\r\n          <button className=\"mlr-10 ponter\" onClick={() => store.dispatch(ActionCreators.undo())} >撤销</button>\r\n        </footer>\r\n        \r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}